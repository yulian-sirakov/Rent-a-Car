@page "/reviews/create"
@inject DataLayer.Common.RentACarDbContext DB
@using Bussines_Layer.Models
@inject NavigationManager NavigationManager

<PageTitle>Create</PageTitle>

<h1>Create</h1>

<h4>Review</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <EditForm method="post" Model="Review" OnValidSubmit="AddReview" FormName="create" Enhance>
            <DataAnnotationsValidator />
            <ValidationSummary class="text-danger" />
            <div class="mb-3">
                <label for="customerid" class="form-label">CustomerId:</label> 
                <InputNumber id="customerid" @bind-Value="Review.CustomerId" class="form-control" /> 
                <ValidationMessage For="() => Review.CustomerId" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="reviewtext" class="form-label">ReviewText:</label> 
                <InputText id="reviewtext" @bind-Value="Review.ReviewText" class="form-control" /> 
                <ValidationMessage For="() => Review.ReviewText" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="rating" class="form-label">Rating:</label> 
                <InputNumber id="rating" @bind-Value="Review.Rating" class="form-control" /> 
                <ValidationMessage For="() => Review.Rating" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="carid" class="form-label">CarId:</label> 
                <InputNumber id="carid" @bind-Value="Review.CarId" class="form-control" /> 
                <ValidationMessage For="() => Review.CarId" class="text-danger" /> 
            </div>        
            <button type="submit" class="btn btn-primary">Create</button>
        </EditForm>
    </div>
</div>

<div>
    <a href="/reviews">Back to List</a>
</div>

@code {

    [SupplyParameterFromForm]
    public Review Review { get; set; } = new();

    // To protect from overposting attacks, see https://aka.ms/RazorPagesCRUD
    public async Task AddReview()
    {
        DB.Reviews.Add(Review);
        await DB.SaveChangesAsync();
        NavigationManager.NavigateTo("/reviews");
    }
}
